name: Build auto-truth modules

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}
      - name: Check code style and run lint
        run: ./gradlew :processor:ktlintCheck :processor:detektMain --stacktrace
      - name: Archive ktlint report
        uses: actions/upload-artifact@v1
        with:
          name: ktlint
          path: ./processor/build/reports/ktlint
      - name: Archive detekt report
        uses: actions/upload-artifact@v1
        with:
          name: detekt
          path: ./processor/build/reports/detekt

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [check, unit-test]
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}
      - name: Build 'annotations' module
        run: ./gradlew :annotations:build --exclude-task :annotations:check --stacktrace
      - name: Build 'processor' module
        run: ./gradlew :processor:build --exclude-task :processor:check --stacktrace

  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}
      - name: Run unit tests
        run: ./gradlew :processor:test --stacktrace
        timeout-minutes: 5
      - name: Archive test report
        uses: actions/upload-artifact@v1
        with:
          name: unit-test
          path: ./processor/build/reports/tests/test
        if: ${{ always() }}
      - name: Measure code coverage
        run: ./gradlew :processor:jacocoTestReport --stacktrace
      - name: Analyze code quality
        run: ./gradlew :processor:sonarqube --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_ACCESS_TOKEN }}
      - name: Archive code coverage report
        uses: actions/upload-artifact@v1
        with:
          name: jacoco
          path: ./processor/build/reports/jacoco

  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [unit-test]
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}
      - name: Run integraion tests
        run: ./gradlew :test:build --stacktrace
        timeout-minutes: 5
      - name: Archive test report
        uses: actions/upload-artifact@v1
        with:
          name: integraion-test
          path: ./test/build/reports/tests/test
        if: ${{ always() }}
